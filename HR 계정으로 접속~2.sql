  =====================================================================  
1. SUBSTR 함수를 사용하여 사원들의 입사한 년도와 입사한 달만 출력 하시오. 

select substr(hiredate, 1,2) as 연도만출력, substr(hiredate, 4,2)as 달
from employee;


2. SUBSTR 함수를 사용하여 4월에 입사한 사원을 출력 하시오.

select hiredate
from employee
where substr(hiredate,4,2)='09';

3. MOD 함수를 사용하여 직속상관이 홀수인 사원만 출력하시오. 
select *
from employee
where mod(manager,2)=1;

4. MOD 함수를 사용하여 월급이 3의 배수인 사원들만 출력하세요.

select *
from employee
where mod(salary,3)='0';

5. 입사한 년도는 2자리 (YY), 월은 (MON)로 표시하고 요일은
약어 (DY)로 지정하여 출력 하시오. 

select hiredate, to_char(hiredate,'YY/MM/DD_DY')
from employee;


6. 올해 몇 일이 지났는지 출력 하시오. 
현재 날짜에서 올해 1월 1일을 뺀 결과를 출력하고 TO_DATE 함수를 사용하여
   데이터 형식을 일치 시키시오.
   
   select to_date('06/28/23','MM/DD/YY')-to_date('2023-01-01','YYYY-MM-DD') as 두날짜의차
   from dual;
   
7. 자신이 태어난 날짜에서 현재까지 몇 일이 지났는지 출력 하세요. 
select trunc(sysdate-to_date('1995-07-14','YYYY-MM-DD'))as "살아온일수"
from dual;

8. 자신이 태어난 날짜에서 현재까지 몇 개월이 지났는지 출력 하세요.

select trunc(months_between(sysdate, to_date('1995-07-14','YYYY-MM-DD')))as "살아온 개월수"
from dual;

9. 사원들의 상관 사번을 출력하되 상관이 없는 사원에 대해서는 null 갑대신 0으로 출력 하시오.

select manager,NVL(NULL,0)
from employee;

10.   사원번호,
      [사원번호 2자리만출력 나머지는 *가림 ] as "가린번호", 
      이름, [이름의 첫자만 출력 총 네자리, 세자리는 * 가림] as "가린이름"  
      
select eno 사원번호, ename 사원이름,
RPAD(substr(eno,1,2),length(eno),'*')as 사원번호,
RPAD(substr(ename,1,1),length(ename),'*')as 사원이름
from employee;
      
      
11.  주민번호:   를 출력하되 801210-1*******   출력 하도록 , 전화 번호 : 010-12*******
	dual 테이블 사용
    
select '801210-1234567' as 주민번호, '010-1234-5678' as 전화번호,
RPAD(substr('801210-1234567',1,8),length('801210-1234567'),'*')as 주민번호,
RPAD(substr('010-1234-5678',1,6),length('010-1234-5678'),'*') as 전화번호
from dual;

=============================================================================
모든 평균은 소숫점 2자리까지 출력하되 반올림 해서 출력 하시오.  
1.  10 번 부서를 제외하고 각 부서별 월급의 합계와 평균과 최대값, 최소값을 구하시오. 

select sum(salary),round(avg(salary))as 평균,max(salary), min(salary),dno 부서번호,count(dno)
from employee
where dno not in(20)
group by dno;


2.  직책의 SALSMAN, PRESIDENT, CLERK 을 제외한 
각 부서별 월급의 합계와 평균과 최대값, 최소값을 구하시오. 

select sum(salary), round(avg(salary))as 평균,max(salary),min(salary),dno 부서, count(*)
from employee
where job not in('SALSMAN','PRESIDENT','CLERK')
group by dno;

3. SMITH 과 동일한 부서에 근무하는 사원들 의 월급의 합계와 평균과 
최대값, 최소값을 구하시오. 

select sum(salary),round(avg(salary))as 평균, max(salary),min(salary),count(*)
from employee
where dno not in(10,30)
group by dno;


4. 부서별 최소월급을 가져오되 최소월급이 1000 이상인 것만 출력하세요. 

select min(salary),dno, count(*)
from employee
where salary>1000
group by dno;


5.  부서별 월급의 합계가 9000 이상것만 출력
select *
from employee
where salary >=(select max(salary) from employee);

6.  부서별 월급의 평균이 2000 이상만 출력

select *
from employee
where salary >=(select round(avg(salary)) from employee);

select sum(salary),round(avg(salary))as 평균, max(salary), min(salary),job 직급,count(job)
from employee
group by job
having round(avg(salary))>2000;

7. 월급이 1500 이하는 제외하고 각 부서별로 월급의 
평균을 구하되 월급의 평균이 2500이상인 것만 출력 하라. 

select sum(salary),round(avg(salary))as 평균, max(salary), min(salary),job 직급,count(*)
from employee
where salary>1500
group by job
having round(avg(salary))>=2500;



8. sub query - 부서별로 최소 급여를 받는 사용자의 이름과
급여와 직책과 부서번호를 출력하세요. 

select ename 이름, job 직책, salary 월급, dno 부서번호
from employee
where salary in(
select min(salary)
from employee
group by dno);

9. sub query - 전체 평균 급여보다 많이 받는 사용자의  
이름과 급여와 직책과 부서번호를 출력하세요. 

select *
from employee
where salary>=
(select 
avg(salary) from employee);

10. sub query - 급여가 평균 급여보다 많은 사원들의 
사원번호와 이름을 표시하되 결과를 급여에 대해 오름차순 정렬하시오


select *
from employee
where salary>=
(select 
avg(salary) from employee)
order by salary asc;
